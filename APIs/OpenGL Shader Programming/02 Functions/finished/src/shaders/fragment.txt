#version 450 core

in vec2 fragmentTexCoord;

out vec4 finalColor;

layout (std140) uniform diskParameters {
    vec4 InnerColor;
    vec4 OuterColor;
    float InnerRadius;
    float OuterRadius;
};

void distFromPoint(in vec2 p1, in vec2 p2, out float dist);

void main()
{
    
    float dist;

    distFromPoint(fragmentTexCoord, vec2(0.5,0.5), dist);

    finalColor = mix(InnerColor, OuterColor, smoothstep(InnerRadius, OuterRadius, dist));
}

void distFromPoint(in vec2 p1, in vec2 p2, out float dist) {
    
    float dx = p1.x - p2.x;
    float dy = p1.y - p2.y;
    dist = sqrt(dx * dx + dy * dy);
}