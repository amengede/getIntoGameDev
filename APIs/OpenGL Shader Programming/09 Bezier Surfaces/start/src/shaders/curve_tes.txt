#version 450 core

layout(isolines) in;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main()
{

	float t = gl_TessCoord.x;

	//points
	vec3 p0 = gl_in[0].gl_Position.xyz;
	vec3 p1 = gl_in[1].gl_Position.xyz;
	vec3 p2 = gl_in[2].gl_Position.xyz;
	vec3 p3 = gl_in[3].gl_Position.xyz;

	//coefficients
	float b0 = pow((1.0 - t),3);
	float b1 = 3.0 * t * (1.0 - t) * (1.0 - t);
	float b2 = 3.0 * t * t * (1.0 - t);
	float b3 = pow(t, 3);

	//curve evaluation
	vec3 p = b0 * p0 + b1 * p1 + b2 * p2 + b3 * p3;

	gl_Position = projection * view * model * vec4(p, 1.0);

}